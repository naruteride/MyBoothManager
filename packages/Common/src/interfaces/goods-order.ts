import type { IDataModelBase } from "./base";

export enum GoodsOrderStatus {
  RECORDED = "recorded",
  CANCELED = "canceled",
}

export interface IGoodsOrderDetailItem {
  gId: number;  // Goods.id
  name?: string;
  quantity: number;
  price?: number;
}

export interface IGoodsOrder extends IDataModelBase {
  id: number;
  boothId: number;  // Foreign key to Booth.id
  order: Array<IGoodsOrderDetailItem>;  // Should be saved as JSON datatype in DB
  status: GoodsOrderStatus;
  totalPrice: number;

  // Use sequelize's autogenerated timestamp
  createdAt?: Date;
}
export type IGoodsOrderResponse = IGoodsOrder;

export type GoodsOrderCreateRequestKey = "boothId" | "order" | "totalPrice";
export type IGoodsOrderCreateRequest = Pick<IGoodsOrder, GoodsOrderCreateRequestKey>;

export type GoodsOrderStatusUpdateRequestKey = "status";
export type IGoodsOrderStatusUpdateRequest = Pick<IGoodsOrder, GoodsOrderStatusUpdateRequestKey>;
