### BASE ###
FROM node:lts-alpine as base

### BUILD STAGE ###
FROM base as build
RUN corepack enable pnpm

# Build arguments
ARG GIT_HASH
ARG API_SERVER_URL=http://localhost:31111
ARG BASE_PATH=/
ENV GIT_HASH=${GIT_HASH}
ENV VITE_MBM_API_SERVER_URL=${API_SERVER_URL}
ENV VITE_PUBLIC_BASE_PATH=${BASE_PATH}

# Copy files
WORKDIR /build
COPY package.json pnpm-*.yaml .
COPY packages/      packages/
COPY projects/Public projects/Public

# Build
# RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
#     pnpm install --frozen-lockfile
RUN pnpm install --frozen-lockfile
RUN pnpm common:build && pnpm public build

# No need to deploy; all build artifacts are in dist folder as static files
# When convert to SSR, it may need to deploy as Node.js app, if so uncomment below
# RUN pnpm deploy --filter @myboothmanager/public --prod /prod/public


### PRODUCTION STAGE ###
FROM base as production

# Copy files
WORKDIR /app
COPY --from=build /build/projects/Public/dist .
# Uncomment below and remove above line when convert to SSR
# COPY --from=build /prod/public/dist .

# Expose port
EXPOSE 31113

# Start server
RUN npm install -g http-server
ENTRYPOINT ["npx", "http-server", "--proxy", "http://localhost:31113?", "--port", "31113"]
